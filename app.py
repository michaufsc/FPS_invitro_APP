import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Mensagem inicial
st.title("üåûC√°lculo do SPF In Vitro a partir de Dados Espectraisüåû")

st.markdown("""
Este aplicativo permite que o usu√°rio envie uma planilha Excel contendo dados espectrais (Absorb√¢ncia, Comprimento de Onda, E(Œª) e I(Œª)) para calcular a Transmit√¢ncia e o SPF in vitro automaticamente.

### Como usar
1. Suba um arquivo Excel (.xlsx) com as colunas:
   - Absorbancia
   - Comprimento de Onda
   - E(Œª)
   - I(Œª)

2. O app calcula a transmit√¢ncia com base na Lei de Lambert-Beer e exibe o valor do SPF in vitro.

3. Gr√°ficos e tabela s√£o exibidos para an√°lise visual.

Feito com ‚ù§Ô∏è usando Streamlit
""")

# Carregar o arquivo Excel
uploaded_file = st.file_uploader("üìÅ Fa√ßa o upload do arquivo Excel (.xlsx)", type=["xlsx"])

# Verificar se o arquivo foi carregado
if uploaded_file:
    try:
        # Ler o arquivo Excel
        df = pd.read_excel(uploaded_file)
        # Limpar espa√ßos extras nos nomes das colunas
        df.columns = df.columns.str.strip()

        # Verificar se a coluna 'Absorbancia' est√° presente
        if 'Absorbancia' in df.columns:
            # Calcular a Transmit√¢ncia
            df['Absorbancia'] = df['Absorbancia'].astype(float)
            df['Transmitancia'] = 10 ** (-df['Absorbancia'])
            st.success("‚úÖ Transmit√¢ncia calculada com sucesso!")

            # Verificar se as colunas necess√°rias est√£o presentes
            if all(col in df.columns for col in ['Comprimento de Onda', 'Transmitancia', 'E(Œª)', 'I(Œª)']):
                # Calcular o valor de dŒª
                d_lambda = df['Comprimento de Onda'][1] - df['Comprimento de Onda'][0]

                # Soma de Riemann para calcular o SPF
                numerador = np.sum(df['E(Œª)'] * df['I(Œª)'] * d_lambda)
                denominador = np.sum(df['E(Œª)'] * df['I(Œª)'] * df['Transmitancia'] * d_lambda)

                # Calcular o SPF se o denominador n√£o for zero
                if denominador != 0:
                    spf = numerador / denominador
                    st.subheader(f"üåû SPF in vitro calculado: {spf:.2f}")
                else:
                    st.warning("‚ö†Ô∏è O denominador √© zero. Verifique os dados.")

            else:
                st.error("‚ùå A planilha deve conter as colunas: 'Comprimento de Onda', 'E(Œª)', 'I(Œª)', e 'Transmitancia'.")

            # Exibir a tabela com a transmit√¢ncia calculada
            st.subheader("üìä Tabela com Transmit√¢ncia")
            st.dataframe(df)

            # Exibir o gr√°fico de Transmit√¢ncia vs Comprimento de Onda
            st.subheader("üìà Gr√°fico: Transmit√¢ncia vs Comprimento de Onda")
            fig, ax = plt.subplots()
            ax.plot(df['Comprimento de Onda'], df['Transmitancia'], color='blue')
            ax.set_xlabel("Comprimento de Onda (nm)")
            ax.set_ylabel("Transmit√¢ncia")
            ax.set_title("Transmit√¢ncia vs Comprimento de Onda")
            ax.grid()
            st.pyplot(fig)

        else:
            st.error("‚ùå A coluna 'Absorbancia' n√£o foi encontrada no arquivo.")

    except Exception as e:
        st.error(f"Erro ao processar o arquivo: {e}")

